#!/bin/bash

args=`getopt -o "f:m:t:" -l "folder,message" -- "$@"`
eval set -- "$args"
while true; do
  case "$1" in
		-m) shift; message=".$1"; shift;;
		-f) shift; folder="$1"; shift;;
		-t) shift; target="$1"; shift;;
		--) shift; break;;
		*) echo "Internal error!"; exit 1;;
  esac
done

if [ -n "${folder}" ]; then
	the_name="$(basename "${folder}")"
	the_target="${folder}"
else
	the_name="$(basename "$(pwd)")"
	the_target="."
fi

target_folder=~/back
if [ -n "${target}" ]; then
	target_folder="${target_folder}/${target}"
fi

if [ -n "${message}" ]; then
	message=$(echo "${message}" | tr ' ' '_')
fi

git_revision=$(git_short_revision "${the_target}")

if [ -n "${git_revision}" ]; then
	the_filename="${target_folder}/${whe_name}.rev${git_revision}.$(now).modified${message}"
	the_A_files=$(git_status_files -c A)
	the_M_files=$(git_status_files -c M)
	the_R_files=$(git_status_files -c R)
	the_RM_files=$(git_status_files -c RM)
	the_AM_files=$(git_status_files -c AM)
else
	the_filename="${target_folder}/${the_name}.$(now).modified${message}"
	the_A_files="*"
fi

if [[ (-z "${the_A_files}") && (-z "${the_M_files}") && (-z "${the_R_files}") && (-z "${the_RM_files}") && (-z "${the_AM_files}") ]]; then
	echo "No files found for backup."
	exit 0
fi

lrztar -q -o ${the_filename}.tlrz ${the_A_files} ${the_M_files} ${the_R_files} ${the_RM_files} ${the_AM_files}
#tar -cf ${the_filename} ${the_A_files} ${the_M_files} ${the_R_files} ${the_AM_files}
#lrzip -q -D ${the_filename}

exit $?

#!/usr/bin/env bash

TARGET_DEFAULT="~/back"

USAGE="$(basename $0) <options> \n
\n
\t	Backup files and folders. \n
\n
\t	Options \n
\n
\t\t		[-h|--help]\t\t\t\t			This message gets printed only. \n
\t\t		[-m|--message] <the message>\t	The message to encode into the filename.  Default: \"\" \n
\t\t		[-f|--folder] <the folder>\t	The file or folder to backup  Default: \".\" \n
\t\t		[-t|--target] <the target>\t	The target folder to output the backup file into.  Default: \"${TARGET_DEFAULT}\" \n
"

args=`getopt -o "hf:m:t:" -l "help,folder,message" -- "$@"`
eval set -- "$args"
while true; do
  case "$1" in
		-h | --help) 	echo -e ${USAGE}; exit;;
		-m | --message) shift; message="$1"; shift;;
		-f | --folder)  shift; folder="$1"; shift;;
		-t | --target)  shift; target="$1"; shift;;
		--) shift; break;;
		*) echo "Internal error!"; exit 1;;
  esac
done

#brotli="/opt/workspace/third_party/brotli/python/bro.py"

if [ -a "${folder}" ]; then
	the_name="$(basename "${folder}")"
	the_target="${folder}"
else
	the_name="$(basename "$(pwd)")"
	the_target="."
fi

target_folder=${TARGET_DEFAULT}
if [ -n "${target}" ]; then
	target_folder="${target_folder}/${target}"
fi

if [ -n "${message}" ]; then
	message=$(echo "${message}" | tr ' ' '_')
fi

svn_revision=$(svn_revision "${the_target}")

if [ -n "${svn_revision}" ]; then
	cmd="tar --use-compress-program=brotli -cf ${target_folder}/${the_name}.rev-${svn_revision}.$(now)${message}.tbr ${the_target}"
else
	cmd="tar --use-compress-program=brotli -cf ${target_folder}/${the_name}.$(now)${message}.tbr ${the_target}"
fi

echo "${cmd}"
bash -c "${cmd}"

exit $?
